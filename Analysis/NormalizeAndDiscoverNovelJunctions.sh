#
#	NormalizeAndDiscoverNovelJunctions.sh
#	May 18th, 2017
#	dennis.kao@sickkids.ca
#
#	
#	Usage: input=input.txt sample=sample ./NormalizeAndDiscoverNovelJunctions.sh
#	OR     input=input.txt sample=sample mindread=10 threshold=0.5 transcript_model=gencode.txt ./NormalizeAndDiscoverNovelJunctions.sh
#
#
#	Input - file generated by SpliceJunctionDiscovery.py or rnaseq.splice_junction_discovery.pbs
#	Output - a single text file with junctions only seen in "sample" with a read count >= "minread" and a normalized read count > "threshold"

beryl_home=~/tools/MendelianRNA-seq
baseDir=`pwd`

#	Mandatory parameters
if [ -z "$input" ];
	then
		echo -e "ERROR - Specify the path to an input file with the format:\n" 
		echo -e "Gene	Type	Chrom	Start	End	NTimesSeen	NSamplesSeen	Samples:NSeen\n"
		echo -e "For example: AL627309.1	BLAH	1	136903	136953	1	1	G34487:1"
		exit 1
fi

if [ -z "$sample" ];
	then
		echo -e "ERROR - Specify the name of the bam file you want to discover novel junctions in\n"
		echo -e "If your file is patient1.bam, then write sample=patient1"
		exit 2
fi

#	Optional parameters
if [ -z "$minread" ];
	then
		minread=10
fi

if [ -z "$threshold" ];
	then
		threshold=0.5
fi

if [ -z "$transcript_model" ];
	then
		transcript_model="$beryl_home/gencode.comprehensive.splice.junctions.txt"
fi

inputFileName=`basename $input`
outputFilePath=`dirname $input`

#	Actual code
output="threshold"$threshold"_novel_"$sample"_norm_"$inputFileName

$beryl_home/Analysis/NormalizeSpliceJunctionValues.py -transcript_model=$transcript_model -splice_file=$input --normalize | grep $sample | grep -v '*' | awk "{ if (\$5 == 1 && \$4 >= $minread ) print \$0 }" | sed "s/:$sample//" | sed "s/:$sample//" | awk "{if (\$7 == \"Neither\" || \$9 > $threshold) print \$0}" > $outputFilePath/$output