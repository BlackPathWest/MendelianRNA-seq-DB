#
#	NormalizeAndDiscoverNovelJunctions.sh
#	May 18th, 2017
#	dennis.kao@sickkids.ca
#
#	
#	Usage: input=input.txt sample=sample ./NormalizeAndDiscoverNovelJunctions.sh
#	OR		input=input.txt sample=sample mindread=10 threshold=0.5 transcript_model=gencode.txt ./NormalizeAndDiscoverNovelJunctions.sh
#
#
#	Input - file generated by SpliceJunctionDiscovery.py or rnaseq.splice_junction_discovery.pbs
#	Output - Generates 3 files in the same directory as the input file: 
# 		1) norm_input.txt: input file with an additional column for normalized read counts
# 		2) novel_sample_norm_input.txt: file from 1) that only includes splice junction sites specific to the sample
#		3) threshold_novel_sample_norm_input.txt: file from 2) with splice sites with a normalized read count > threshold

beryl_home=~/tools/MendelianRNA-seq
baseDir=`pwd`

#	Mandatory parameters
if [ -z "$input" ];
	then
		echo -e "ERROR - Specify the path to an input file with the format:\n" 
		echo -e "Gene	Type	Chrom	Start	End	NTimesSeen	NSamplesSeen	Samples:NSeen\n"
		echo -e "For example: AL627309.1	BLAH	1	136903	136953	1	1	G34487:1"
		exit 1
fi

if [ -z "$sample" ];
	then
		echo -e "ERROR - Specify the name of the bam file you want to discover novel junctions in\n"
		echo -e "If your file is patient1.bam, then write sample=patient1"
		exit 2
fi

#	Default parameters
if [ -z "$minread" ];
	then
		minread=10
fi

if [ -z "$threshold" ];
	then
		threshold=0.5
fi

if [ -z "$transcript_model" ];
	then
		transcript_model="$beryl_home/gencode.comprehensive.splice.junctions.txt"
fi

inputFileName=`basename $input`
outputFilePath=`dirname $input`

# step1Output="norm_"$inputFileName
# step2Output="novel_"$sample"_norm_"$inputFileName
step3Output="threshold"$threshold"_novel_"$sample"_norm_"$inputFileName

#	Actual computation
echo -e "\n========	RUNNING NormalizeAndDiscoverNovelJunctions.sh	========\n"

$beryl_home/Analysis/NormalizeSpliceJunctionValues.py -transcript_model=$transcript_model -splice_file=$input --normalize | grep $sample | awk "{ if (\$5 == 1 && \$4 >= $minread ) print \$0 }" | sed "s/:$sample//" | sed "s/:$sample//" | awk "{if (\$7 == \"Neither\" || \$9 > $threshold) print \$0}" | grep -v '*' > $outputFilePath/$step3Output
echo -e "Output: $step3Output\n"

# finalNumberOfSpliceSites=`wc -l $step3Output`
# echo -e "Number of splice sites: $finalNumberOfSpliceSites\n"

echo -e "DONE - NormalizeAndDiscoverNovelJunctions.sh has finished running\n"
echo "Output: $outputFilePath/$step3Output"
